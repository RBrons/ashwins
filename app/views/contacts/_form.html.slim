.fixed-breadcrumb
  - if flash[:success]
    span#flash_message.label.label-primary.margin-sm-left
      = flash[:success]

  .breadcrumb-wrapper
    ul.m__breadcrumb
      li.btn_bc.margin-sm-right
        button#save_btn.btn.btn-sm Save
      = render_breadcrumbs :tag => :li, :separator => ""
    .action-links
      - if params[:id].present?
        = link_to "List", contacts_path, class: "margin-md-right"
        = link_to "Show", contact_path(params[:id]), class: ""

- url = @contact.persisted? ? contact_path(@contact.id) : contacts_path
- heading = @contact.persisted? ? "Edit Client" : "New Client"
.clearfix.contact-form-wrapper.left-justify.margin-sm-top
  .col-lg-6.col-md-6
    = form_for @contact, url: url,remote: (request.xhr?), html: { class: "validation_form" } do |f|
      .clearfix
      - if params[:contact_type] == "company"
        .form-group.required
          = f.hidden_field :is_company, value: true
          = f.label :company_name, "Company Name", class: "control-label"
          span.error-msg
          = f.text_field :company_name, class: "form-control", required: true, "data-parsley-error-message" => "Company name can't be blank"
          div#legal-ending-wrapper
            = f.select :legal_ending, options_for_select(["", "Inc.", "Corp.", "Ltd.", "LLC", "LLP", "LP", "Partners", "Partnership"], @contact.legal_ending)
      - else
          = f.hidden_field :is_company, value: false

      .form-group
        -if params[:recommended_type]
          label Type
          = f.text_field :contact_type, value: params[:recommended_type], class: 'form-control', readonly: true
        -else
          label Type
          = f.select :contact_type, options_for_select(['Personnel', 'Client Participant', 'Counter-Party'], f.object.contact_type), {}, class: 'form-control selectize-single-contact'

      .form-group#contact-role_wrapper
        - if params[:recommended_type] != "Counter-Party"
          = f.label :role, "#{(params[:contact_type] == "company") ? 'Company Role' : 'Role'}"
          div#per-role-wrapper
            = f.select :per_role, Contact::PERSONNEL_ROLE, {}, class: 'form-control selectize-single'
          div#cp-role-wrapper
            = f.select :cp_role, Contact::CLIENT_PARTICIPANT_ROLE, {}, class: 'form-control selectize-single'
      - if params[:contact_type] == "company"
        .form-group
          = f.label :first_name, "#{@contact.cprefix}First Name", class: "control-label"
          = f.text_field :first_name, class: "form-control"

        .form-group
          = f.label :last_name, "#{@contact.cprefix}Last Name", class: "control-label"
          = f.text_field :last_name, class: "form-control"
      - else
        .form-group.required
          = f.label :first_name, "First Name", class: "control-label"
          span.error-msg
          = f.text_field :first_name, class: "form-control contact_first_name", required: true, "data-parsley-error-message" => "First name can't be blank"

        .form-group.required
          = f.label :last_name, "Last Name", class: "control-label"
          span.error-msg
          = f.text_field :last_name, class: "form-control contact_last_name", required: true, "data-parsley-error-message" => "Last name can't be blank"

      .form-group
        = f.label :phone1, "Phone 1"
        = f.text_field :phone1, class: "form-control"

      .form-group
        = f.label :phone2, "Phone 2"
        = f.text_field :phone2, class: "form-control"

      .form-group
        = f.label :fax
        = f.text_field :fax, class: "form-control"

      .form-group
        = f.label :email
        = f.text_field :email, class: "form-control"

      .form-group
        = f.label :ein_or_ssn, "#{(params[:contact_type] == "company") ? 'EIN' : "SSN"}"
        = f.text_field :ein_or_ssn, class: "form-control"

      .form-group
        = f.label :postal_address, "Postal Address"
        = f.text_field :postal_address, class: "form-control"

      .form-group
        = label_tag 'City'
        = f.text_field :city, class: "form-control city"

      .form-group
        = label_tag 'State'
        = f.select :state, Property::US_STATES, {}, class: 'form-control selectize-single'

      .form-group
        = f.label "Zip"
        = f.text_field :zip, class: 'zip form-control'

      .form-group
        = f.label :notes
        = f.text_area :notes, class: "form-control"
      .form-group
      .clearfix
      /.form-group
        /= f.submit 'Save', class: 'btn btn-sm btn-primary'

javascript:
  $('#save_btn').on('click', function() {
    $('.validation_form').submit();
  });
